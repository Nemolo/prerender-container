name: Create and publish a Docker image

on:
  push:
    # branches: ['release']
    tags: ['v*.*.*']  # Solo tag semver
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Necessario per creare release
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          body: |
            ## üê≥ Docker Images
            
            This release includes the following Docker images:
            
            ```bash
            # Pull the image
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            
            # Available tags:
            ${{ steps.meta.outputs.tags }}
            ```
            
            ## üöÄ Usage
            
            ```bash
            # Run the prerender server
            docker run -p 3000:3000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            
            # With domain whitelist
            docker run -p 3000:3000 \
              -e ALLOWED_DOMAINS="example.com,www.example.com" \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ```
            
            ## üìã Image Details
            
            - **Registry**: `${{ env.REGISTRY }}`
            - **Repository**: `${{ env.IMAGE_NAME }}`
            - **Digest**: `${{ steps.push.outputs.digest }}`
            - **Platform**: `linux/amd64`
            
            ## üîó Links
            
            - [View on GitHub Container Registry](https://github.com/${{ github.repository }}/pkgs/container/prerender-container)
            - [Documentation](https://github.com/${{ github.repository }}#readme)
          draft: false
          prerelease: false
